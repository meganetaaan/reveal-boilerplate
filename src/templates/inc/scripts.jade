style.
  .axis path, .axis line {
    fill: none;
    stroke: #fafafa;
    shape-rendering: crispEdges;
  } 

  .axis text {
    font-family: sans-serif;
    font-size: 11px;
    fill: #fafafa;
  }
script(src="js/vendor/head.min.js")
script(src="js/vendor/reveal.min.js")
script(src="js/vendor/d3.js")
script(src="js/main.js")
script.
  (function(){
    var dataset = [ 25, 7, 5, 26, 11, 8, 25, 14, 23, 19,
                    14, 11, 22, 29, 11, 13, 12, 17, 18, 10,
                    24, 18, 25, 9, 3 ];
    //var dataset = [ 5, 10, 15, 20, 25 ];
    var width = 500;
    var height = 120;
    var barPadding = 1;
    var svg = d3.select('.d3')
      .append('svg')
      .attr('width', width)
      .attr('height', height);
    var rect = svg.selectAll('circle')
      .data(dataset)
      .enter()
      .append('rect')
      .attr('x', function(d, i){return i * (width / dataset.length);})
      .attr('y', function(d){return height - d * 4;})
      .attr('width', function(d, i){return (width / dataset.length) - barPadding;})
      .attr('height', function(d){return d * 4;})
      .attr('fill', '#ffffff');
    var text = svg.selectAll('text')
      .data(dataset)
      .enter()
      .append('text')
      .text(function(d){return d;})
      .attr('x', function(d, i){return i * (width / dataset.length)
                                  + (width / dataset.length - barPadding) / 2;})
      .attr('y', function(d){return height - (d * 4) + 14;})
      .attr('text-anchor', 'middle')
      .attr('font-family', 'sans-serif')
      .attr('font-size', '11px')
      .attr('fill', '#212121');
  })();
  (function(){
    // Dynamic and Random dataset
    var dataset = [];
    var numDataPoints = 50;
    var xRange = Math.random() * 1000;
    var yRange = Math.random() * 1000;
    for(var i = 0; i < numDataPoints; i++){
      var newNumber1 = Math.round(Math.random() * xRange);
      var newNumber2 = Math.round(Math.random() * yRange);
      dataset.push([newNumber1, newNumber2]);
    }
    //Create SVG element
    var width = 900;
    var height = 600;
    var padding = 35;
    var svg = d3.select('.d3-scatter')
      .append('svg')
      .attr('width', width)
      .attr('height', height)

    //Setup scale and axis function
    var xScale = d3.scale.linear()
      .domain([0, d3.max(dataset, function(d){ return d[0]; })])
      .range([padding, width - padding * 2]);
    var yScale = d3.scale.linear()
      .domain([0, d3.max(dataset, function(d) { return d[1]; })])
      .range([height - padding, padding]);
    var rScale = d3.scale.linear()
      .domain([0, d3.max(dataset, function(d){ return d[1]; })])
      .range([2, 10]);
    var xAxis = d3.svg.axis()
      .scale(xScale)
      .orient('bottom')
      .ticks(5);
    var yAxis = d3.svg.axis()
      .scale(yScale)
      .orient('left')
      .ticks(5);
    svg.append('g')
      .attr('class', 'axis')
      .attr('transform', 'translate(0,' + (height - padding) + ')')
      .call(xAxis);
    svg.append('g')
      .attr('class', 'axis')
      .attr('transform', 'translate(' + padding + ', 0)')
      .call(yAxis);

    //Plot
    var circle = svg.selectAll('circle')
      .data(dataset)
      .enter()
      .append('circle')
      .attr('cx', function(d){return xScale(d[0]);})
      .attr('cy', function(d){return yScale(d[1]);})
      .attr('r', function(d){ return rScale(d[1]);})
      .attr('fill', '#fafafa');
    var text = svg.selectAll('text')
      .data(dataset)
      .enter()
      .append('text')
      .text(function(d){ return d[0] + ',' + d[1] })
      .attr('x', function(d){return xScale(d[0]);})
      .attr('y', function(d){return yScale(d[1]);})
      .attr('font-family', 'sans-serif')
      .attr('font-size', '11px')
      .attr('fill', '#aaaaaa')
  })();
  (function(){
    var dataset = [100, 200, 300, 400, 500];
  })();
